/*
 * Created on 2004-8-28
 *
 * //
 * Window - Preferences - Java - Code Style - Code Templates
 */
package com.bestway.bcus.client.common;

import java.awt.BorderLayout;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JDialog;
import javax.swing.JPanel;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JRSaveContributor;
import net.sf.jasperreports.view.JRViewer;

import com.bestway.client.windows.form.FmMain;

/**
 * @author Administrator // change the template for this generated type comment
 *         go to Window - Preferences - Java - Code Style - Code Templates
 */
public class DgReportViewer extends JDialog {
	private static final long serialVersionUID = 1L;

	private JRViewer viewer = null;

	private JPanel pnlMain = null;

	/** Creates new form DgReportViewer */
	public DgReportViewer(String sourceFile, boolean isXMLFile, boolean isModal)
			throws JRException {
		super(FmMain.getInstance());
		this.setModal(isModal);
		initComponents();
		this.viewer = new JRViewer(sourceFile, isXMLFile);
		removeJRSaveContributor();
		this.pnlMain.add(this.viewer, BorderLayout.CENTER);
	}

	/** Creates new form DgReportViewer */
	public DgReportViewer(String sourceFile, boolean isXMLFile)
			throws JRException {
		this(sourceFile, isXMLFile, true);
	}

	/** Creates new form DgReportViewer */
	public DgReportViewer(InputStream is, boolean isXMLFile, boolean isModal)
			throws JRException {
		super(FmMain.getInstance());
		this.setModal(isModal);
		initComponents();
		this.viewer = new JRViewer(is, isXMLFile);
		removeJRSaveContributor();
		this.pnlMain.add(this.viewer, BorderLayout.CENTER);
	}

	/** Creates new form DgReportViewer */
	public DgReportViewer(InputStream is, boolean isXMLFile) throws JRException {
		this(is, isXMLFile, true);
	}

	/** Creates new form DgReportViewer */
	public DgReportViewer(JasperPrint jasperPrint, boolean isModal)
			throws JRException {
		super(FmMain.getInstance());
		initComponents();
		this.setModal(isModal);
		this.viewer = new JRViewer(jasperPrint);
		removeJRSaveContributor();
		this.pnlMain.add(this.viewer, BorderLayout.CENTER);
	}

	/** Creates new form DgReportViewer */
	public DgReportViewer(JasperPrint jasperPrint) throws JRException {
		this(jasperPrint, true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		setTitle("报表预览");
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				exitForm(evt);
			}
		});
		pnlMain = new javax.swing.JPanel();
		pnlMain.setLayout(new java.awt.BorderLayout());
		getContentPane().add(pnlMain, java.awt.BorderLayout.CENTER);
		pack();
		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit()
				.getScreenSize();
		setSize(new java.awt.Dimension(screenSize.width, screenSize.height - 25));
		this
				.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
	}

	public void setVisible(boolean b) {
		this.setLocation(0, 0);
		super.setVisible(b);
	}

	/** Exit the Application */
	private void exitForm(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_exitForm
		this.setVisible(false);
		this.viewer.clear();
		this.viewer = null;
		this.getContentPane().removeAll();
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		String fileName = null;
		boolean isXMLFile = false;

		// if (args.length == 0) {
		// usage();
		// return;
		// }

		int k = 0;
		while (args.length > k) {
			if (args[k].startsWith("-F"))
				fileName = args[k].substring(2);
			if (args[k].startsWith("-XML"))
				isXMLFile = true;

			k++;
		}

		try {
			viewReport("d:/myjrprint.jrprint", false);
		} catch (JRException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	/**
	 * 
	 */
	private static void usage() {
		System.out.println("DgReportViewer usage:");
		System.out.println("\tjava DgReportViewer -XML -Ffile");
	}

	/**
	 * 
	 */
	public static void viewReport(String sourceFile, boolean isXMLFile)
			throws JRException {
		DgReportViewer jasperViewer = new DgReportViewer(sourceFile, isXMLFile,
				true);
		jasperViewer.setVisible(true);
	}

	/**
	 * 
	 */
	public static void viewReport(InputStream is, boolean isXMLFile)
			throws JRException {
		DgReportViewer jasperViewer = new DgReportViewer(is, isXMLFile, true);
		jasperViewer.setVisible(true);
	}

	/**
	 * 
	 */
	public static void viewReport(JasperPrint jasperPrint) throws JRException {
		DgReportViewer jasperViewer = new DgReportViewer(jasperPrint, true);
		jasperViewer.setVisible(true);
	}

	/**
	 * 
	 */
	public static void viewReport(String sourceFile, boolean isXMLFile,
			boolean isModal) throws JRException {
		DgReportViewer jasperViewer = new DgReportViewer(sourceFile, isXMLFile,
				isModal);
		jasperViewer.setVisible(true);
	}

	/**
	 * 
	 */
	public static void viewReport(InputStream is, boolean isXMLFile,
			boolean isModal) throws JRException {
		DgReportViewer jasperViewer = new DgReportViewer(is, isXMLFile, isModal);
		jasperViewer.setVisible(true);
	}

	/**
	 * 
	 */
	public static void viewReport(JasperPrint jasperPrint, boolean isModal)
			throws JRException {
		DgReportViewer jasperViewer = new DgReportViewer(jasperPrint, isModal);
		jasperViewer.setVisible(true);
	}

	private void removeJRSaveContributor() {
		// -------net.sf.jasperreports.view.save.JRPrintSaveContributor
		// -------net.sf.jasperreports.view.save.JRPdfSaveContributor
		// -------net.sf.jasperreports.view.save.JRRtfSaveContributor
		// -------net.sf.jasperreports.view.save.JRHtmlSaveContributor
		// -------net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor
		// -------net.sf.jasperreports.view.save.JRMultipleSheetsXlsSaveContributor
		// -------net.sf.jasperreports.view.save.JRCsvSaveContributor
		// -------net.sf.jasperreports.view.save.JRXmlSaveContributor
		// -------net.sf.jasperreports.view.save.JREmbeddedImagesXmlSaveContributor
		List<String> list = new ArrayList<String>();
		list.add(net.sf.jasperreports.view.save.JRHtmlSaveContributor.class
				.getName());
		list.add(net.sf.jasperreports.view.save.JRCsvSaveContributor.class
				.getName());
		list.add(net.sf.jasperreports.view.save.JRXmlSaveContributor.class
				.getName());
		list
				.add(net.sf.jasperreports.view.save.JREmbeddedImagesXmlSaveContributor.class
						.getName());
		for (JRSaveContributor save : viewer.getSaveContributors()) {
			if (list.contains(save.getClass().getName())) {
				viewer.removeSaveContributor(save);
			}
		}
	}

}
