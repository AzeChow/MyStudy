/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JQueryFiled.java
 *
 * Created on 2010-12-2, 10:58:12
 */
package com.bestway.bcus.client.common.tableeditor;

import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JTable;
import javax.swing.SwingUtilities;

import org.apache.commons.beanutils.BeanUtils;

import com.bestway.client.util.JTableListModel;

/**
 *
 * @author yp
 */
public class JQueryFiled extends javax.swing.JPanel {

    private Object value;
    private String displayFieldName = "";
    private QueryDataListenser queryDataListenser = null;
    private QueryFormListenser queryFormListenser = null;
    private NextFocusListenser nextFocusListenser =null;
    private JTable table;
    private MouseAdapterExtend mouseAdapterExtend =null;

    public QueryDataListenser getQueryDataListenser() {
        return queryDataListenser;
    }

    public void setQueryDataListenser(QueryDataListenser queryDataListenser) {
        this.queryDataListenser = queryDataListenser;
    }

    public QueryFormListenser getQueryFormListenser() {
        return queryFormListenser;
    }

    public void setQueryFormListenser(QueryFormListenser queryFormListenser) {
        this.queryFormListenser = queryFormListenser;
    }

    public NextFocusListenser getNextFocusListenser() {
        return nextFocusListenser;
    }

    public void setNextFocusListenser(NextFocusListenser nextFocusListenser) {
        this.nextFocusListenser = nextFocusListenser;
    }

    public JTable getTable() {
        return table;
    }

    public void setTable(JTable table) {
        this.table = table;
        if(!mouseAdapterExtend.hasExtendMenuItem()){
            mouseAdapterExtend.addExtendMenuItem(TableCellExtendMenuItemUtil.getExtendMenuItems((JTableListModel)table.getModel()));
        }
    }

    /** Creates new form JQueryFiled */
    public JQueryFiled(String displayFieldName) {
        initComponents();
        this.displayFieldName = displayFieldName;

        this.tfValue.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {

                    public void run() {
                        tfValue.selectAll();
                    }
                });
            }
        });
        mouseAdapterExtend = new MouseAdapterExtend(this.tfValue);
        this.tfValue.addMouseListener(mouseAdapterExtend);
        this.tfValue.getDocument().addUndoableEditListener(mouseAdapterExtend.getUndoManager());
    }

    public Object getValue() {
        return value;
    }

    public void setValue(Object value) {
        this.value = value;
        if (value != null) {
            if (displayFieldName != null && !"".equals(displayFieldName.trim())) {
                try {
                    this.tfValue.setText(BeanUtils.getProperty(value, displayFieldName));
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(JQueryFiled.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvocationTargetException ex) {
                    Logger.getLogger(JQueryFiled.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NoSuchMethodException ex) {
                    Logger.getLogger(JQueryFiled.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                this.tfValue.setText(this.value.toString());
            }
        } else {
            this.tfValue.setText("");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnQuery = new javax.swing.JButton();
        tfValue = new javax.swing.JTextField();

        setBorder(null);
        setLayout(new java.awt.BorderLayout());

        btnQuery.setText("...");
        btnQuery.setPreferredSize(new java.awt.Dimension(15, 10));
        btnQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryActionPerformed(evt);
            }
        });
        btnQuery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnQueryKeyPressed(evt);
            }
        });
        add(btnQuery, java.awt.BorderLayout.LINE_END);

        tfValue.setBorder(null);
        tfValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfValueFocusGained(evt);
            }
        });
        tfValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfValueKeyPressed(evt);
            }
        });
        add(tfValue, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryActionPerformed
        if (queryFormListenser != null) {
            Object obj = queryFormListenser.getQueryResult();
            if (obj != null) {
                if (obj instanceof String) {
                    if (!"".equals(obj.toString())) {
                        this.setValue(obj);
                    }
                } else {
                    this.setValue(obj);
                }
            }
        }
    }//GEN-LAST:event_btnQueryActionPerformed

    private void tfValueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfValueKeyPressed
        if (evt.getKeyCode() == 10) {// Enter
            if (queryDataListenser != null) {
                this.setValue(queryDataListenser.getQueryResult(this.tfValue.getText().trim()));
//                this.tfValue.dispatchEvent(new KeyEvent((Container) evt.getSource(), KeyEvent.KEY_PRESSED, 0, 0,
//                        KeyEvent.VK_TAB, evt.getKeyChar()));
//                table.dispatchEvent(new KeyEvent((Container) evt.getSource(), KeyEvent.KEY_PRESSED, 0, 0,
//                            KeyEvent.VK_TAB, evt.getKeyChar()));
                if(nextFocusListenser!=null){
                    nextFocusListenser.enterNextFocus();
                }
            }
            evt.consume();
        }
        if (evt.getKeyCode() == 40 || evt.getKeyCode() == 38) {
            if (queryDataListenser != null) {
                this.setValue(queryDataListenser.getQueryResult(this.tfValue.getText().trim()));
            }
        }
    }//GEN-LAST:event_tfValueKeyPressed

    private void btnQueryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnQueryKeyPressed
        if (evt.getKeyCode() == 10) {// Enter
            if (queryDataListenser != null) {
                this.setValue(queryDataListenser.getQueryResult(this.tfValue.getText().trim()));
//                this.tfValue.dispatchEvent(new KeyEvent((Container) evt.getSource(), KeyEvent.KEY_PRESSED, 0, 0,
//                        KeyEvent.VK_TAB, evt.getKeyChar()));
//                table.dispatchEvent(new KeyEvent((Container) evt.getSource(), KeyEvent.KEY_PRESSED, 0, 0,
//                            KeyEvent.VK_TAB, evt.getKeyChar()));
                if(nextFocusListenser!=null){
                    nextFocusListenser.enterNextFocus();
                }
            }
            evt.consume();
        }
        if (evt.getKeyCode() == 40 || evt.getKeyCode() == 38) {
            if (queryDataListenser != null) {
                this.setValue(queryDataListenser.getQueryResult(this.tfValue.getText().trim()));
            }
        }
    }//GEN-LAST:event_btnQueryKeyPressed

    private void tfValueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfValueFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tfValueFocusGained

    public interface QueryDataListenser {

        Object getQueryResult(String fieldText);
    }

    public interface QueryFormListenser {

        Object getQueryResult();
    }

    public interface NextFocusListenser{

        void enterNextFocus();
        
    }

    @Override
    public void setEnabled(boolean b) {
        this.tfValue.setEditable(b);
        this.btnQuery.setEnabled(b);
    }

    @Override
    public void requestFocus() {
        SwingUtilities.invokeLater(new Runnable() {

            public void run() {
                tfValue.requestFocus();
                tfValue.selectAll();
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuery;
    private javax.swing.JTextField tfValue;
    // End of variables declaration//GEN-END:variables
}
